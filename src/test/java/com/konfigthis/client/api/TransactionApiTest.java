/*
 * Payfactory Api
 * Payfactory specializes in embedded payment facilitation (payfac) services for ISVs and SaaS companies. Our gateway-friendly platform integrates with software systems to provide seamless payment facilitation with little to no development required, allowing our partners to minimize integration costs and quickly gain a new revenue stream. Founded by payment industry veterans, we believe that integrated processing should be simple, frictionless and fast â€“ while also maintaining the highest level of security, customer service and human support.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TransactionMetadataRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Disabled
public class TransactionApiTest {

    private static TransactionApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TransactionApi(apiClient);
    }

    /**
     * Post Metadata related to a Transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMetadataTest() throws ApiException {
        String transactionId = null;
        String merchantId = null;
        String cardHolderName = null;
        String externalId = null;
        String orderId = null;
        Double partnerFee = null;
        Integer itemCount = null;
        Object response = api.createMetadata(transactionId, merchantId, cardHolderName)
                .externalId(externalId)
                .orderId(orderId)
                .partnerFee(partnerFee)
                .itemCount(itemCount)
                .execute();
        // TODO: test validations
    }

    /**
     * Post multiple Metadate related to a Transactions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMetadataBulkTest() throws ApiException {
        Object response = api.createMetadataBulk()
                .execute();
        // TODO: test validations
    }

}
