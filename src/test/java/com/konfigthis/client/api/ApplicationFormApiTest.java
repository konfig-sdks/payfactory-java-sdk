/*
 * Payfactory Api
 * Payfactory specializes in embedded payment facilitation (payfac) services for ISVs and SaaS companies. Our gateway-friendly platform integrates with software systems to provide seamless payment facilitation with little to no development required, allowing our partners to minimize integration costs and quickly gain a new revenue stream. Founded by payment industry veterans, we believe that integrated processing should be simple, frictionless and fast â€“ while also maintaining the highest level of security, customer service and human support.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateSessionRequest;
import com.konfigthis.client.model.CreateSessionRequestSignerModel;
import com.konfigthis.client.model.SessionBusinessDetailsModel;
import com.konfigthis.client.model.SessionResponse;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationFormApi
 */
@Disabled
public class ApplicationFormApiTest {

    private static ApplicationFormApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ApplicationFormApi(apiClient);
    }

    /**
     * Creates a new Session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSessionTest() throws ApiException {
        CreateSessionRequestSignerModel signer = null;
        String companyName = null;
        URI redirectUrl = null;
        URI completeUrl = null;
        URI refreshUrl = null;
        String externalId = null;
        String pricingPlanId = null;
        SessionBusinessDetailsModel businessDetails = null;
        SessionResponse response = api.createSession(signer, companyName, redirectUrl, completeUrl, refreshUrl, externalId)
                .pricingPlanId(pricingPlanId)
                .businessDetails(businessDetails)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets information about a Session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSessionInfoTest() throws ApiException {
        String sessionId = null;
        SessionResponse response = api.getSessionInfo(sessionId)
                .execute();
        // TODO: test validations
    }

    /**
     * Touch a Session, keeping it active
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSessionActivityTest() throws ApiException {
        String sessionId = null;
        SessionResponse response = api.updateSessionActivity(sessionId)
                .execute();
        // TODO: test validations
    }

}
